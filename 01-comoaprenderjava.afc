[chapter Como Aprender Java]
[quote "Busco um instante feliz que justifique minha existência" -- Fiodór Dostoievski]

[note]
schedule estimado para o curso noturno:

dia 1: o que eh java, controle de fluxo e variaveis
dia 2: orientacao a objetos basica
dia 3: array, modificadores
dia 4: heranca e polimorfismo
dia 5: eclipse, classes abstratas
dia 6: interfaces, exceptions
dia 7: pacotes, javadoc, pacote padrao
dia 8: java io, collections (comeco)
dia 9: collections (final)
dia 10: threads, sockets

Alguns instrutores preferem passar mais rapidamente java io e collections, então
da tempo para esticar em classes abstratas e interfaces.
[/note]


[note]
Aprender orientação a objetos é um choque; muda o paradigma e a forma de pensar. É tudo 
muito novo, desafiador e empolgante.

Com o tempo nos acostumamos com a idéia e tudo passa a ser trivial e óbvio. Não haveria 
como ser diferente. Para fazer com que os alunos entendam a orientação a objetos e se 
apaixonem pela idéia (assim como foi conosco), precisamos lembrar sempre do nosso começo, 
de quando tivemos os primeiros estalos.

Em suma, para dar o FJ-11, precisamos nos _apaixonar de novo_ pela orientação a objetos.

=== Objetivos do curso

* que o aluno saia apto a aprender a utilizar qualquer biblioteca por aí através de sua 
documentação (exemplos: JFreeChart, log4j, JasperReports). Para isso o apêndice de socket 
e o de jfreechart, onde aprendemos a fazer algo difícil e da para enxergar que o complicado 
são os conceitos, e a API é trivial.

* salientar que o uso de alguns conceitos, como excecoes, interfaces e classes abstratas, 
somente são entendidos por completo depois de um tempo de prática com modelagem.

* mostrar que decorar API não é importante.

* 75% da carga horária é voltada aos conceitos, somente 25% a API (a partir do java.io). 
Isso mostra a facilidade de usar o Java, mas que antes tem bastante chão.

=== Idéias que devem ser repetidas diversas vezes durante o curso:

* objetos são *sempre* acessados por referência
* desenhar uma referência apontando para um objeto
* programe voltado a interface, e não a implementação [GoF]
* encapsulamento: suas classes devem esconder como realizam o trabalho
* polimorfismo é a chave para o sucesso, e interface é o modo mais elegante de usa-lo.
* desenhar o UML das classes apenas como suporte, sem dar formalidades
* java tem uma estrutura simples, mas precisamos de muitos conceitos para chegar
* muita coisa já está pronta, devemos aprender a procurar nas APIs do java e nas open source 
antes de criar nossa biblioteca, e-mail, gráfico, log, etc... .


------------------------
Fazer uma apresentação do curso dizendo o que vamos aprender. É importante limitar 
os escopos do curso mas deixar brechas para perguntas como: "... e a parte de banco 
de dados ?". Utilizar-se disso para fazer um leve marketing dos outros cursos.

É importante explicar que, um dos intuitos do curso é proporcionar autonomia para 
que possam "caminhar com as próprias pernas".

Destacar a importância dos desafios e pedir para que tentem estudar em casa. Sabemos 
que todos andam ocupados e trabalham, mas é legal sugerir que tentem ler no ônibus 
ou em qualquer momento vago. É importante destacar que os desafios escondem tópicos 
interessantes da computação que vão além do Java.

==== Apresentação

Uma das partes mais importantes, pois é neste ponto que os alunos têm que se sentirem tranqüilos 
e animados em relação ao curso. 

Apresentar:

Nome do Curso;
Colocar o email na lousa;
Resumo sobre a história da empresa (irmãos Silveira), lembrando de destacar que o curso é 
focado no mercado, diferente dos cursos da Sun, por exemplo (nao falar direto isso);
Nome e mini-curriculum do instrutor - Importante focar nos projetos interessantes;
Pedir para que cada aluno se apresente dizendo o nome e o motivo que o leva a fazer o curso. 
Isso é importante para fazer futuros comentários dirigidos a cada interesse.

Novamente, a apresentação é o cartão de visitas para o curso! Deve-se ser bem natural e falar bem
claro para que os alunos se sintam confiantes.
[/note]

[section O que é realmente importante?]

Muitos livros, ao passar dos capítulos, mencionam todos os detalhes da linguagem 
juntamente com seus princípios básicos. Isso acaba criando muita confusão, em especial 
porque o estudante não consegue distinguir exatamente o que é primordial aprender no início
daquilo que pode ser estudado mais a frente.

Se uma classe abstrata deve ou não ter ao menos um método abstrato, se o if só 
aceita argumentos booleanos e todos os detalhes de classes internas realmente não 
devem ser preocupações para aquele que possui como objetivo primário aprender Java. 
Esse tipo de informação será adquirida com o tempo, e não é necessário no início.

Neste curso, separamos essas informações em quadros especiais, já que são informações extras. 
Ou então, apenas citamos num exercício e deixamos para o leitor procurar informações se 
for de seu interesse.

Por fim falta mencionar sobre a prática, que deve ser tratada seriamente: todos os exercícios 
são muito importantes e os desafios podem ser feitos quando o curso acabar. De qualquer maneira 
recomendamos aos alunos estudar em casa, e praticar bastante código e variações.

[box O curso]
Para aqueles que estão fazendo o curso Java e Orientação a Objetos, é recomendado estudar em 
casa aquilo que foi visto durante a aula, tentando resolver os exercícios opcionais e 
os desafios apresentados.
[/box]

[section Sobre os exercícios]
Os exercícios do curso variam de práticos até pesquisas na Internet, ou mesmo consultas sobre assuntos 
avançados em determinados tópicos para incitar a curiosidade do aprendiz na tecnologia.

Existem também, em determinados capítulos, uma série de desafios. Eles focam mais no problema 
computacional que na linguagem, porém são uma excelente forma de treinar a sintaxe e, 
principalmente, familiarizar o aluno com a biblioteca padrão Java, além de proporcionar 
um ganho na velocidade de desenvolvimento.

[section Tirando dúvidas]
Para tirar dúvidas dos exercícios, ou de Java em geral, recomendamos o fórum 
do GUJ (http://www.guj.com.br/), onde sua dúvida será respondida prontamente.
O GUJ foi fundado por desenvolvedores da Caelum, e hoje conta com mais de um milhão
de mensagens. 

Fora isso, sinta-se a vontade de entrar em contato com seu instrutor para tirar todas
as suas dúvidas que aparecerem durante o curso.

[section Bibliografia]
Bibliografia recomendada para iniciantes na plataforma Java

[list]
* Java - Como programar, de Harvey M. Deitel
* Use a cabeça! - Java, de Bert Bates e Kathy Sierra
* (Avançado) Effective Java Programming Language Guide - 2nd edition, de Joshua Bloch
[/list]